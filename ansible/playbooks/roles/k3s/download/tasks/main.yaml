---
- name: Download k3s binary x64
  get_url:
    url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s
    checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-amd64.txt
    dest: /usr/local/bin/k3s
    owner: root
    group: root
    mode: 0755
  when: ansible_facts.architecture == "x86_64"

- name: Download k3s binary arm64
  get_url:
    url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s-arm64
    checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-arm64.txt
    dest: /usr/local/bin/k3s
    owner: root
    group: root
    mode: 0755
  when:
    - ansible_facts.architecture is search("aarch64")

- name: Download k3s binary armhf
  get_url:
    url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s-armhf
    checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-arm.txt
    dest: /usr/local/bin/k3s
    owner: root
    group: root
    mode: 0755
  when:
    - ansible_facts.architecture is search("arm")
    - ansible_facts.userspace_bits == "32"


- name: Install iptables
  apt:
    name: iptables
    state: latest

- name: Link k3s to kubectl
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    state: link

- name: Link k3s to crictl
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/crictl
    state: link

- name: Link k3s to ctr
  file:
      src: /usr/local/bin/k3s
      dest: /usr/local/bin/ctr
      state: link

- name: Create a killall script
  copy:
    src: k3s-killall.sh
    dest: /usr/local/bin/k3s-killall.sh
    owner: root
    group: root
    mode: 0755

- name: Create an uninstall script
  copy:
    src: k3s-uninstall.sh
    dest: /usr/local/bin/k3s-uninstall.sh
    owner: root
    group: root
    mode: 0755

- name: Check if k3s binary exists
  stat:
    path: /usr/local/bin/k3s
  register: k3s_binary

- name: Fail if k3s binary does not exist
  fail:
    msg: "k3s binary does not exist"
  when: not k3s_binary.stat.exists
